{"version":3,"file":"IsLatLong.js","sourceRoot":"","sources":["../../../../src/decorator/common/IsLatLong.ts"],"names":[],"mappings":";;;;;;AACA,6CAAwD;AACxD,wEAAyD;AAE5C,QAAA,UAAU,GAAG,WAAW,CAAC;AAEtC;;GAEG;AACH,SAAgB,SAAS,CAAC,KAAa;IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,mBAAkB,CAAC,KAAK,CAAC,CAAC;AAChE,CAAC;AAFD,8BAEC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,iBAAqC;IAC7D,OAAO,uBAAU,CACf;QACE,IAAI,EAAE,kBAAU;QAChB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC;YACpD,cAAc,EAAE,yBAAY,CAC1B,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,+CAA+C,EAC1E,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC;AAdD,8BAcC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from './ValidateBy';\r\nimport isLatLongValidator from 'validator/lib/isLatLong';\r\n\r\nexport const IS_LATLONG = 'isLatLong';\r\n\r\n/**\r\n * Checks if a value is string in format a \"latitude,longitude\".\r\n */\r\nexport function isLatLong(value: string): boolean {\r\n  return typeof value === 'string' && isLatLongValidator(value);\r\n}\r\n\r\n/**\r\n * Checks if a value is string in format a \"latitude,longitude\".\r\n */\r\nexport function IsLatLong(validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_LATLONG,\r\n      validator: {\r\n        validate: (value, args): boolean => isLatLong(value),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property must be a latitude,longitude string',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}