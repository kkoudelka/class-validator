{"version":3,"file":"IsRFC3339.js","sourceRoot":"","sources":["../../../../src/decorator/string/IsRFC3339.ts"],"names":[],"mappings":";;;;;;AACA,qDAAgE;AAChE,wEAAyD;AAE5C,QAAA,WAAW,GAAG,WAAW,CAAC;AAEvC;;;GAGG;AACH,SAAgB,SAAS,CAAC,KAAc;IACtC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,mBAAkB,CAAC,KAAK,CAAC,CAAC;AAChE,CAAC;AAFD,8BAEC;AAED;;;GAGG;AACH,SAAgB,SAAS,CAAC,iBAAqC;IAC7D,OAAO,uBAAU,CACf;QACE,IAAI,EAAE,mBAAW;QACjB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC;YACpD,cAAc,EAAE,yBAAY,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,iCAAiC,EAAE,iBAAiB,CAAC;SAC9G;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC;AAXD,8BAWC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\r\nimport isRFC3339Validator from 'validator/lib/isRFC3339';\r\n\r\nexport const IS_RFC_3339 = 'isRFC3339';\r\n\r\n/**\r\n * Check if the string is a valid RFC 3339 date.\r\n * If given value is not a string, then it returns false.\r\n */\r\nexport function isRFC3339(value: unknown): boolean {\r\n  return typeof value === 'string' && isRFC3339Validator(value);\r\n}\r\n\r\n/**\r\n * Check if the string is a valid RFC 3339 date.\r\n * If given value is not a string, then it returns false.\r\n */\r\nexport function IsRFC3339(validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_RFC_3339,\r\n      validator: {\r\n        validate: (value, args): boolean => isRFC3339(value),\r\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be RFC 3339 date', validationOptions),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}