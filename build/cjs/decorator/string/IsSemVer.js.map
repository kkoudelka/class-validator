{"version":3,"file":"IsSemVer.js","sourceRoot":"","sources":["../../../../src/decorator/string/IsSemVer.ts"],"names":[],"mappings":";;;;;;AACA,qDAAgE;AAChE,sEAAuD;AAE1C,QAAA,UAAU,GAAG,UAAU,CAAC;AAErC;;;GAGG;AACH,SAAgB,QAAQ,CAAC,KAAc;IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,kBAAiB,CAAC,KAAK,CAAC,CAAC;AAC/D,CAAC;AAFD,4BAEC;AAED;;;GAGG;AACH,SAAgB,QAAQ,CAAC,iBAAqC;IAC5D,OAAO,uBAAU,CACf;QACE,IAAI,EAAE,kBAAU;QAChB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;YACnD,cAAc,EAAE,yBAAY,CAC1B,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,uDAAuD,EAClF,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC;AAdD,4BAcC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\r\nimport isSemVerValidator from 'validator/lib/isSemVer';\r\n\r\nexport const IS_SEM_VER = 'isSemVer';\r\n\r\n/**\r\n * Check if the string is a Semantic Versioning Specification (SemVer).\r\n * If given value is not a string, then it returns false.\r\n */\r\nexport function isSemVer(value: unknown): boolean {\r\n  return typeof value === 'string' && isSemVerValidator(value);\r\n}\r\n\r\n/**\r\n * Check if the string is a Semantic Versioning Specification (SemVer).\r\n * If given value is not a string, then it returns false.\r\n */\r\nexport function IsSemVer(validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_SEM_VER,\r\n      validator: {\r\n        validate: (value, args): boolean => isSemVer(value),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property must be a Semantic Versioning Specification',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}