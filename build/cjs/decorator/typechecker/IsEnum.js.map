{"version":3,"file":"IsEnum.js","sourceRoot":"","sources":["../../../../src/decorator/typechecker/IsEnum.ts"],"names":[],"mappings":";;;AACA,qDAAgE;AAEnD,QAAA,OAAO,GAAG,QAAQ,CAAC;AAEhC;;GAEG;AACH,SAAgB,MAAM,CAAC,KAAc,EAAE,MAAW;IAChD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,OAAO,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxC,CAAC;AAHD,wBAGC;AAED;;GAEG;AACH,SAAgB,MAAM,CAAC,MAAc,EAAE,iBAAqC;IAC1E,OAAO,uBAAU,CACf;QACE,IAAI,EAAE,eAAO;QACb,WAAW,EAAE,CAAC,MAAM,CAAC;QACrB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtE,cAAc,EAAE,yBAAY,CAC1B,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,sCAAsC,EACjE,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC;AAfD,wBAeC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\r\n\r\nexport const IS_ENUM = 'isEnum';\r\n\r\n/**\r\n * Checks if a given value is an enum\r\n */\r\nexport function isEnum(value: unknown, entity: any): boolean {\r\n  const enumValues = Object.keys(entity).map(k => entity[k]);\r\n  return enumValues.indexOf(value) >= 0;\r\n}\r\n\r\n/**\r\n * Checks if a given value is an enum\r\n */\r\nexport function IsEnum(entity: object, validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_ENUM,\r\n      constraints: [entity],\r\n      validator: {\r\n        validate: (value, args): boolean => isEnum(value, args.constraints[0]),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property must be a valid enum value',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}