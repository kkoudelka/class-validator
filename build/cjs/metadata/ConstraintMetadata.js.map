{"version":3,"file":"ConstraintMetadata.js","sourceRoot":"","sources":["../../../src/metadata/ConstraintMetadata.ts"],"names":[],"mappings":";;;AACA,4CAAgD;AAEhD;;GAEG;AACH,MAAa,kBAAkB;IAoB7B,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,YAAY,MAAgB,EAAE,IAAa,EAAE,QAAiB,KAAK;QACjE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,4EAA4E;IAC5E,YAAY;IACZ,4EAA4E;IAE5E;;OAEG;IACH,IAAI,QAAQ;QACV,OAAO,4BAAgB,CAA+B,IAAI,CAAC,MAAM,CAAC,CAAC;IACrE,CAAC;CACF;AAxCD,gDAwCC","sourcesContent":["import { ValidatorConstraintInterface } from '../validation/ValidatorConstraintInterface';\r\nimport { getFromContainer } from '../container';\r\n\r\n/**\r\n * This metadata interface contains information for custom validators.\r\n */\r\nexport class ConstraintMetadata {\r\n  // -------------------------------------------------------------------------\r\n  // Properties\r\n  // -------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Target class which performs validation.\r\n   */\r\n  target: Function;\r\n\r\n  /**\r\n   * Custom validation's name, that will be used as validation error type.\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Indicates if this validation is asynchronous or not.\r\n   */\r\n  async: boolean;\r\n\r\n  // -------------------------------------------------------------------------\r\n  // Constructor\r\n  // -------------------------------------------------------------------------\r\n\r\n  constructor(target: Function, name?: string, async: boolean = false) {\r\n    this.target = target;\r\n    this.name = name;\r\n    this.async = async;\r\n  }\r\n\r\n  // -------------------------------------------------------------------------\r\n  // Accessors\r\n  // -------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Instance of the target custom validation class which performs validation.\r\n   */\r\n  get instance(): ValidatorConstraintInterface {\r\n    return getFromContainer<ValidatorConstraintInterface>(this.target);\r\n  }\r\n}\r\n"]}