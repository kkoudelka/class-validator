{"version":3,"file":"get-global.util.js","sourceRoot":"","sources":["../../../src/utils/get-global.util.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,SAAgB,SAAS;IACvB,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;QACrC,OAAO,UAAU,CAAC;KACnB;IAED,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,MAAM,CAAC;KACf;IAED,6DAA6D;IAC7D,yCAAyC;IACzC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,6DAA6D;QAC7D,yCAAyC;QACzC,OAAO,MAAM,CAAC;KACf;IAED,6DAA6D;IAC7D,uCAAuC;IACvC,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;QAC/B,6DAA6D;QAC7D,uCAAuC;QACvC,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAxBD,8BAwBC","sourcesContent":["/**\r\n * This function returns the global object across Node and browsers.\r\n *\r\n * Note: `globalThis` is the standardized approach however it has been added to\r\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\r\n */\r\nexport function getGlobal() {\r\n  if (typeof globalThis !== 'undefined') {\r\n    return globalThis;\r\n  }\r\n\r\n  if (typeof global !== 'undefined') {\r\n    return global;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore: Cannot find name 'window'.\r\n  if (typeof window !== 'undefined') {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore: Cannot find name 'window'.\r\n    return window;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore: Cannot find name 'self'.\r\n  if (typeof self !== 'undefined') {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore: Cannot find name 'self'.\r\n    return self;\r\n  }\r\n}\r\n"]}