{"version":3,"file":"IsLatitude.js","sourceRoot":"","sources":["../../../../src/decorator/common/IsLatitude.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,CAAC,MAAM,WAAW,GAAG,YAAY,CAAC;AAExC;;GAEG;AACH,MAAM,UAAU,UAAU,CAAC,KAAa;IACtC,OAAO,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AAC7F,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,UAAU,CAAC,iBAAqC;IAC9D,OAAO,UAAU,CACf;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;YACrD,cAAc,EAAE,YAAY,CAC1B,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,+CAA+C,EAC1E,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from './ValidateBy';\r\nimport { isLatLong } from './IsLatLong';\r\n\r\nexport const IS_LATITUDE = 'isLatitude';\r\n\r\n/**\r\n * Checks if a given value is a latitude.\r\n */\r\nexport function isLatitude(value: string): boolean {\r\n  return (typeof value === 'number' || typeof value === 'string') && isLatLong(`${value},0`);\r\n}\r\n\r\n/**\r\n * Checks if a given value is a latitude.\r\n */\r\nexport function IsLatitude(validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_LATITUDE,\r\n      validator: {\r\n        validate: (value, args): boolean => isLatitude(value),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property must be a latitude string or number',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}