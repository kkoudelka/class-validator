{"version":3,"file":"IsOptional.js","sourceRoot":"","sources":["../../../../src/decorator/common/IsOptional.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,kCAAkC,CAAC;AACnE,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAEpE;;GAEG;AACH,MAAM,UAAU,UAAU,CAAC,iBAAqC;IAC9D,OAAO,UAAU,MAAc,EAAE,YAAoB;QACnD,MAAM,IAAI,GAA2B;YACnC,IAAI,EAAE,eAAe,CAAC,sBAAsB;YAC5C,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,WAAW,EAAE;gBACX,CAAC,MAAW,EAAE,KAAU,EAAW,EAAE;oBACnC,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,SAAS,CAAC;gBAC7E,CAAC;aACF;YACD,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACF,kBAAkB,EAAE,CAAC,qBAAqB,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\r\nimport { ValidationTypes } from '../../validation/ValidationTypes';\r\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\r\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\r\n\r\n/**\r\n * Checks if value is missing and if so, ignores all validators.\r\n */\r\nexport function IsOptional(validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return function (object: object, propertyName: string): void {\r\n    const args: ValidationMetadataArgs = {\r\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\r\n      target: object.constructor,\r\n      propertyName: propertyName,\r\n      constraints: [\r\n        (object: any, value: any): boolean => {\r\n          return object[propertyName] !== null && object[propertyName] !== undefined;\r\n        },\r\n      ],\r\n      validationOptions: validationOptions,\r\n    };\r\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\r\n  };\r\n}\r\n"]}