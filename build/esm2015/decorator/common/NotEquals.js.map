{"version":3,"file":"NotEquals.js","sourceRoot":"","sources":["../../../../src/decorator/common/NotEquals.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAEhE,MAAM,CAAC,MAAM,UAAU,GAAG,WAAW,CAAC;AAEtC;;GAEG;AACH,MAAM,UAAU,SAAS,CAAC,KAAc,EAAE,UAAmB;IAC3D,OAAO,KAAK,KAAK,UAAU,CAAC;AAC9B,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,SAAS,CAAC,UAAe,EAAE,iBAAqC;IAC9E,OAAO,UAAU,CACf;QACE,IAAI,EAAE,UAAU;QAChB,WAAW,EAAE,CAAC,UAAU,CAAC;QACzB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzE,cAAc,EAAE,YAAY,CAC1B,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,+CAA+C,EAC1E,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\r\n\r\nexport const NOT_EQUALS = 'notEquals';\r\n\r\n/**\r\n * Checks if value does not match (\"!==\") the comparison.\r\n */\r\nexport function notEquals(value: unknown, comparison: unknown): boolean {\r\n  return value !== comparison;\r\n}\r\n\r\n/**\r\n * Checks if value does not match (\"!==\") the comparison.\r\n */\r\nexport function NotEquals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: NOT_EQUALS,\r\n      constraints: [comparison],\r\n      validator: {\r\n        validate: (value, args): boolean => notEquals(value, args.constraints[0]),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property should not be equal to $constraint1',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}