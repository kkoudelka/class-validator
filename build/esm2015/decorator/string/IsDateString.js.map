{"version":3,"file":"IsDateString.js","sourceRoot":"","sources":["../../../../src/decorator/string/IsDateString.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAEhE,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,CAAC,MAAM,cAAc,GAAG,cAAc,CAAC;AAE7C;;GAEG;AACH,MAAM,UAAU,YAAY,CAAC,KAAc,EAAE,OAAsC;IACjF,OAAO,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACnC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,YAAY,CAC1B,OAAsC,EACtC,iBAAqC;IAErC,OAAO,UAAU,CACf;QACE,IAAI,EAAE,cAAc;QACpB,WAAW,EAAE,CAAC,OAAO,CAAC;QACtB,SAAS,EAAE;YACT,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,EAAW,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC;YACvD,cAAc,EAAE,YAAY,CAC1B,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,gDAAgD,EAC3E,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\r\nimport ValidatorJS from 'validator';\r\nimport { isISO8601 } from './IsISO8601';\r\n\r\nexport const IS_DATE_STRING = 'isDateString';\r\n\r\n/**\r\n * Alias for IsISO8601 validator\r\n */\r\nexport function isDateString(value: unknown, options?: ValidatorJS.IsISO8601Options): boolean {\r\n  return isISO8601(value, options);\r\n}\r\n\r\n/**\r\n * Alias for IsISO8601 validator\r\n */\r\nexport function IsDateString(\r\n  options?: ValidatorJS.IsISO8601Options,\r\n  validationOptions?: ValidationOptions\r\n): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_DATE_STRING,\r\n      constraints: [options],\r\n      validator: {\r\n        validate: (value, args): boolean => isDateString(value),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property must be a valid ISO 8601 date string',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}