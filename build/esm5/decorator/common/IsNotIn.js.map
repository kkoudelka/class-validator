{"version":3,"file":"IsNotIn.js","sourceRoot":"","sources":["../../../../src/decorator/common/IsNotIn.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAEhE,MAAM,CAAC,IAAM,SAAS,GAAG,SAAS,CAAC;AAEnC;;GAEG;AACH,MAAM,UAAU,OAAO,CAAC,KAAc,EAAE,cAAkC;IACxE,OAAO,CAAC,CAAC,cAAc,YAAY,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAA,aAAa,IAAI,OAAA,aAAa,KAAK,KAAK,EAAvB,CAAuB,CAAC,CAAC;AAC9G,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,OAAO,CAAC,MAAsB,EAAE,iBAAqC;IACnF,OAAO,UAAU,CACf;QACE,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,CAAC,MAAM,CAAC;QACrB,SAAS,EAAE;YACT,QAAQ,EAAE,UAAC,KAAK,EAAE,IAAI,IAAc,OAAA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAnC,CAAmC;YACvE,cAAc,EAAE,YAAY,CAC1B,UAAA,UAAU,IAAI,OAAA,UAAU,GAAG,mEAAmE,EAAhF,CAAgF,EAC9F,iBAAiB,CAClB;SACF;KACF,EACD,iBAAiB,CAClB,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\r\n\r\nexport const IS_NOT_IN = 'isNotIn';\r\n\r\n/**\r\n * Checks if given value not in a array of allowed values.\r\n */\r\nexport function isNotIn(value: unknown, possibleValues: readonly unknown[]): boolean {\r\n  return !(possibleValues instanceof Array) || !possibleValues.some(possibleValue => possibleValue === value);\r\n}\r\n\r\n/**\r\n * Checks if given value not in a array of allowed values.\r\n */\r\nexport function IsNotIn(values: readonly any[], validationOptions?: ValidationOptions): PropertyDecorator {\r\n  return ValidateBy(\r\n    {\r\n      name: IS_NOT_IN,\r\n      constraints: [values],\r\n      validator: {\r\n        validate: (value, args): boolean => isNotIn(value, args.constraints[0]),\r\n        defaultMessage: buildMessage(\r\n          eachPrefix => eachPrefix + '$property should not be one of the following values: $constraint1',\r\n          validationOptions\r\n        ),\r\n      },\r\n    },\r\n    validationOptions\r\n  );\r\n}\r\n"]}