{"version":3,"file":"ValidateIf.js","sourceRoot":"","sources":["../../../../src/decorator/common/ValidateIf.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,kCAAkC,CAAC;AACnE,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAEpE;;GAEG;AACH,MAAM,UAAU,UAAU,CACxB,SAA+C,EAC/C,iBAAqC;IAErC,OAAO,UAAU,MAAc,EAAE,YAAoB;QACnD,IAAM,IAAI,GAA2B;YACnC,IAAI,EAAE,eAAe,CAAC,sBAAsB;YAC5C,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,WAAW,EAAE,CAAC,SAAS,CAAC;YACxB,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACF,kBAAkB,EAAE,CAAC,qBAAqB,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\r\nimport { ValidationTypes } from '../../validation/ValidationTypes';\r\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\r\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\r\n\r\n/**\r\n * Ignores the other validators on a property when the provided condition function returns false.\r\n */\r\nexport function ValidateIf(\r\n  condition: (object: any, value: any) => boolean,\r\n  validationOptions?: ValidationOptions\r\n): PropertyDecorator {\r\n  return function (object: object, propertyName: string): void {\r\n    const args: ValidationMetadataArgs = {\r\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\r\n      target: object.constructor,\r\n      propertyName: propertyName,\r\n      constraints: [condition],\r\n      validationOptions: validationOptions,\r\n    };\r\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\r\n  };\r\n}\r\n"]}