{"version":3,"file":"ValidateNested.js","sourceRoot":"","sources":["../../../../src/decorator/common/ValidateNested.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,kCAAkC,CAAC;AACnE,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AAEpE;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,iBAAqC;IAClE,IAAM,IAAI,gBAA2B,iBAAiB,CAAE,CAAC;IACzD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,UAAU,GAAG,0DAA0D,CAAC;IAEvG,OAAO,UAAU,MAAc,EAAE,YAAoB;QACnD,IAAM,IAAI,GAA2B;YACnC,IAAI,EAAE,eAAe,CAAC,iBAAiB;YACvC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,iBAAiB,EAAE,IAAI;SACxB,CAAC;QACF,kBAAkB,EAAE,CAAC,qBAAqB,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\r\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\r\nimport { ValidationTypes } from '../../validation/ValidationTypes';\r\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\r\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\r\n\r\n/**\r\n * Objects / object arrays marked with this decorator will also be validated.\r\n */\r\nexport function ValidateNested(validationOptions?: ValidationOptions): PropertyDecorator {\r\n  const opts: ValidationOptions = { ...validationOptions };\r\n  const eachPrefix = opts.each ? 'each value in ' : '';\r\n  opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\r\n\r\n  return function (object: object, propertyName: string): void {\r\n    const args: ValidationMetadataArgs = {\r\n      type: ValidationTypes.NESTED_VALIDATION,\r\n      target: object.constructor,\r\n      propertyName: propertyName,\r\n      validationOptions: opts,\r\n    };\r\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\r\n  };\r\n}\r\n"]}