{"version":3,"file":"ValidationTypes.js","sourceRoot":"","sources":["../../../src/validation/ValidationTypes.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH;IAAA;IAqBA,CAAC;IAZC;;OAEG;IACI,uBAAO,GAAd,UAAe,IAAY;QAA3B,iBAQC;QAPC,OAAO,CACL,IAAI,KAAK,SAAS;YAClB,IAAI,KAAK,YAAY;YACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;iBACd,GAAG,CAAC,UAAA,GAAG,IAAI,OAAC,KAAY,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;iBAC9B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACxB,CAAC;IACJ,CAAC;IAnBD,YAAY;IACL,iCAAiB,GAAG,kBAAkB,CAAC,CAAC,OAAO;IAC/C,iCAAiB,GAAG,kBAAkB,CAAC,CAAC,OAAO;IAC/C,kCAAkB,GAAG,mBAAmB,CAAC,CAAC,OAAO;IACjD,sCAAsB,GAAG,uBAAuB,CAAC,CAAC,OAAO;IACzD,yBAAS,GAAG,qBAAqB,CAAC,CAAC,OAAO;IAC1C,0BAAU,GAAG,WAAW,CAAC,CAAC,OAAO;IAc1C,sBAAC;CAAA,AArBD,IAqBC;SArBY,eAAe","sourcesContent":["/**\r\n * Validation types.\r\n */\r\nexport class ValidationTypes {\r\n  /* system */\r\n  static CUSTOM_VALIDATION = 'customValidation'; // done\r\n  static NESTED_VALIDATION = 'nestedValidation'; // done\r\n  static PROMISE_VALIDATION = 'promiseValidation'; // done\r\n  static CONDITIONAL_VALIDATION = 'conditionalValidation'; // done\r\n  static WHITELIST = 'whitelistValidation'; // done\r\n  static IS_DEFINED = 'isDefined'; // done\r\n\r\n  /**\r\n   * Checks if validation type is valid.\r\n   */\r\n  static isValid(type: string): boolean {\r\n    return (\r\n      type !== 'isValid' &&\r\n      type !== 'getMessage' &&\r\n      Object.keys(this)\r\n        .map(key => (this as any)[key])\r\n        .indexOf(type) !== -1\r\n    );\r\n  }\r\n}\r\n"]}